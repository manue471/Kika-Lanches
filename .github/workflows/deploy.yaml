name: Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/kikapp-fe:latest
          build-args: |
            VITE_API_URL=http://kikapp.cloud/api
            VITE_TENANT_ID=1
          
      - name: Upload necessary files
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: docker/docker-compose.prod.yml

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build files
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: .

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          source: "docker-compose.prod.yml"
          target: "/var/www/kikapp-frontend/"
          overwrite: true
          rm: true

      - name: SSH to server and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          script: |
            mkdir -p /var/www/kikapp-frontend
            cd /var/www/kikapp-frontend
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d --remove-orphans
            docker exec kikapp-api-nginx nginx -s reload || echo "Nginx reload tentado"
            docker ps | grep kikapp