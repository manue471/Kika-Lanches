name: Deploy Frontend

on:
  push:
    branches:
      - main
# Temporário para testes

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/kikapp-fe:latest
          build-args: |
            VITE_API_URL=http://kikapp.cloud/api
            VITE_TENANT_ID=1
          
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy docker-compose to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          source: "docker/docker-compose.prod.yml"
          target: "~/kikapp-frontend-deploy"
          strip_components: 1

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          script: |
            # Criar diretório se não existir
            mkdir -p /var/www/kikapp-frontend
            
            # Copiar docker-compose do home para o destino
            sudo cp ~/kikapp-frontend-deploy/docker-compose.prod.yml /var/www/kikapp-frontend/ 2>/dev/null || \
            cp ~/kikapp-frontend-deploy/docker-compose.prod.yml /var/www/kikapp-frontend/
            
            # Ir para o diretório
            cd /var/www/kikapp-frontend
            
            # Pull da nova imagem
            docker compose -f docker-compose.prod.yml pull
            
            # Restart do container
            docker compose -f docker-compose.prod.yml up -d --remove-orphans
            
            # Aguardar container iniciar
            sleep 5
            
            # Reload do nginx (se falhar, não quebra o deploy)
            docker exec kikapp-api-nginx nginx -s reload 2>/dev/null || echo "Nginx reload skipped"
            
            # Limpar arquivo temporário
            rm -rf ~/kikapp-frontend-deploy
            
            # Verificar status
            docker ps | grep kikapp-fe
            echo "✅ Deploy concluído!"